"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.getSchema=getSchema;var _types=require("../assertions/types");const contentTypeRegex=/^application\/json/;let http,https;if(!(0,_types.isFunction)(global.fetch)){http=require("http");https=require("https")}async function nodeFetch(e,t){const n=t?https:http;return new Promise(((t,s)=>{n.get(e,(e=>{const{statusCode:n}=e,r=e.headers["content-type"];let o;200!==n?o=new Error(`Request Failed.\nStatus Code: ${n}`):contentTypeRegex.test(r)||(o=new Error(`Invalid content-type.\nExpected application/json but received ${r}`));if(o){e.resume();s(o)}else{let n="";e.setEncoding("utf8");e.on("data",(e=>n+=e));e.on("end",(()=>{try{t(JSON.parse(n))}catch(e){s(e)}}))}})).on("error",(e=>s(e)))}))}async function getSchema(e,t=!0){if(!(0,_types.isString)(e))throw new Error("#getSchema: url must be a string");return(0,_types.isFunction)(global.fetch)?fetch(e).then((e=>e.json())):nodeFetch(e,t)}
