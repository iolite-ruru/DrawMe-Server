"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _schemaJsonJs=_interopRequireDefault(require("schema-json-js"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const VERSION=Symbol("optional aggregate version"),DESCRIPTORS=Symbol("hash of recognized descriptors"),SCHEMA=Symbol("Schema object that defines the data model"),CREATE_MODEL=Symbol("creating a Model"),DEFAULT_DESCRIPTORS={configurable:!0,enumerable:!0,writable:!0},EmptySchema={};class Model{constructor(e,t,r=DEFAULT_DESCRIPTORS){const{type:o,payload:a={},meta:s}=e;if(!a||"object"!=typeof a||Array.isArray(a))throw new TypeError("#Model: payload must be an object if defined");if(t.title&&o!==t.title)throw new TypeError("#Model: data type does not match Schema");s&&s.version&&Model.version(this,s.version);Object.defineProperties(this,{[DESCRIPTORS]:r.immutable?{value:{immutable:!0}}:{value:{...r}},[SCHEMA]:{value:t}});const i=r.immutable?{enumerable:!0}:{...r};return this[CREATE_MODEL](this,a,i)}[CREATE_MODEL](e,t,r){const o=Object.keys(t);for(let a=0,s=o.length;a<s;a++){const s=t[o[a]];s&&"object"==typeof s?Object.defineProperty(e,o[a],{...r,value:Array.isArray(s)?this[CREATE_MODEL]([],s,r):this[CREATE_MODEL]({},s,r)}):Object.defineProperty(e,o[a],{...r,value:s})}return this[DESCRIPTORS].immutable?Object.freeze(e):Array.isArray(e)?e:new Proxy(e,{defineProperty:(e,t,o)=>"symbol"==typeof t?Object.defineProperty(e,t,{value:o.value}):Object.defineProperty(e,t,{...r,value:o.value})})}toJSON(){const e={type:this[SCHEMA].title};Object.keys(this).length&&(e.payload={...this});this[VERSION]&&(e.meta={version:this[VERSION]});return e}static version(e,t){Number.isInteger(t)&&(void 0!==e[VERSION]?e[VERSION]=t:Object.defineProperty(e,VERSION,{writable:!0,value:t}));return e[VERSION]}static schema(e){return e[SCHEMA]}static errors(e){return e[SCHEMA].errors}static validate(e,t){return e[SCHEMA].validate(e,t||e[SCHEMA])}}var _default=new Proxy(Model,{construct:async function(e,t){let r=t[3],o=t[2];if(o&&"object"==typeof o&&!Array.isArray(o)&&0!==!Object.keys(o)[0].indexOf("http")){r=o;o=void 0}let a=t[1];a&&"object"==typeof a?a instanceof _schemaJsonJs.default||(a=await new _schemaJsonJs.default(a,o)):a=await new _schemaJsonJs.default(EmptySchema);const s=t[0];if(!s||"object"!=typeof s||Array.isArray(s))throw new TypeError("Model data must be an object");if(a.isAsync){if(!await a.validate(s.payload))throw new Error(...a.errors)}else if(!a.validate(s.payload))throw new Error(...a.errors);return new e(s,a,r)}});exports.default=_default;module.exports=exports.default;
